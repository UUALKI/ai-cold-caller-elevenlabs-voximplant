const axios = require('axios');

const API_KEY = 'sk_ff39c1d16620e8788133b568029a26401b92f1918cd89f40';
const AGENT_ID = 'agent_01jxd1arjvfq9bd1ae6j92cs3t';

async function testElevenLabsAPI() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ElevenLabs Agent API...\n');
    console.log(`üîë API Key: ${API_KEY.substring(0, 20)}...`);
    console.log(`ü§ñ Agent ID: ${AGENT_ID}\n`);
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ —á–µ—Ä–µ–∑ /voices endpoint
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç API –∫–ª—é—á–∞ —á–µ—Ä–µ–∑ /voices endpoint...');
    try {
        const voicesResponse = await axios.get('https://api.elevenlabs.io/v1/voices', {
            headers: {
                'xi-api-key': API_KEY
            }
        });
        console.log('‚úÖ API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–æ—Å—Ç—É–ø–Ω–æ –≥–æ–ª–æ—Å–æ–≤:', voicesResponse.data.voices?.length || 0);
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ API –∫–ª—é—á–∞:', error.response?.status, error.response?.data);
    }
    
    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤...');
    try {
        const agentsResponse = await axios.get('https://api.elevenlabs.io/v1/agent', {
            headers: {
                'xi-api-key': API_KEY
            }
        });
        console.log('‚úÖ –ê–≥–µ–Ω—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:', agentsResponse.data.agents?.length || 0);
        if (agentsResponse.data.agents) {
            agentsResponse.data.agents.forEach((agent, index) => {
                console.log(`   ${index + 1}. ${agent.name} (${agent.agent_id}) - ${agent.status}`);
            });
        }
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤:', error.response?.status, error.response?.data);
        console.log('   –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:', error.response?.data);
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞...');
    try {
        const agentResponse = await axios.get(`https://api.elevenlabs.io/v1/agent/${AGENT_ID}`, {
            headers: {
                'xi-api-key': API_KEY
            }
        });
        console.log('‚úÖ –ê–≥–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω:', agentResponse.data.name);
        console.log('   ID:', agentResponse.data.agent_id);
        console.log('   –°—Ç–∞—Ç—É—Å:', agentResponse.data.status);
        console.log('   –¢–∏–ø:', agentResponse.data.agent_type);
        console.log('   –û–ø–∏—Å–∞–Ω–∏–µ:', agentResponse.data.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è');
    } catch (error) {
        console.log('‚ùå –ê–≥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', error.response?.status, error.response?.data);
        console.log('   –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:', error.response?.data);
    }
    
    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    try {
        const userResponse = await axios.get('https://api.elevenlabs.io/v1/user', {
            headers: {
                'xi-api-key': API_KEY
            }
        });
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userResponse.data.first_name, userResponse.data.last_name);
        console.log('   Email:', userResponse.data.email);
        console.log('   Subscription:', userResponse.data.subscription?.tier);
        console.log('   Character Count:', userResponse.data.subscription?.character_count);
        console.log('   Character Limit:', userResponse.data.subscription?.character_limit);
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.response?.status, error.response?.data);
    }
    
    // –¢–µ—Å—Ç 5: –¢–µ—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å –∞–≥–µ–Ω—Ç–æ–º
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å –∞–≥–µ–Ω—Ç–æ–º...');
    try {
        const conversationResponse = await axios.post(`https://api.elevenlabs.io/v1/agent/${AGENT_ID}/conversation`, {
            session_id: `test_session_${Date.now()}`,
            message_type: "greeting",
            message: "",
            voice_id: "21m00Tcm4TlvDq8ikWAM"
        }, {
            headers: {
                'xi-api-key': API_KEY,
                'Content-Type': 'application/json'
            }
        });
        console.log('‚úÖ –î–∏–∞–ª–æ–≥ —Å –∞–≥–µ–Ω—Ç–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç!');
        console.log('   –û—Ç–≤–µ—Ç:', conversationResponse.data.response || conversationResponse.data.message);
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–ª–æ–≥–∞ —Å –∞–≥–µ–Ω—Ç–æ–º:', error.response?.status, error.response?.data);
        console.log('   –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:', error.response?.data);
    }
}

testElevenLabsAPI().catch(console.error);
